name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
          architecture: x64
          check-latest: false
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN
          overwrite-settings: true
          job-status: success

      - name: Extract version from build.gradle
        id: extract_version
        run: echo "::set-output name=version::$(grep -oP '(?<=version\s\').*?(?=\')' build.gradle)"

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew buildJar

      # Add the action to publish a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: "Release v${{ steps.extract_version.outputs.version }}"
          body: "Release v${{ steps.extract_version.outputs.version }}"

      # Upload the build artifact as a release asset
      - name: Upload Release Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/PremiumCheck-${{ steps.extract_version.outputs.version }}.jar
          asset_name: PremiumCheck-${{ steps.extract_version.outputs.version }}.jar
          asset_content_type: application/java-archive
